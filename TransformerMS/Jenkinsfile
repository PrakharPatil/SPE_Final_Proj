// pipeline {
//     agent any
//
//     environment {
//         DOCKER_IMAGE = "yourdockerhubusername/transformems:latest"
//         KUBE_CONFIG = credentials('kubeconfig-credentials-id')
//         DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials-id')
//     }
//
//     stages {
//         stage('Checkout') {
//             steps {
//                 echo "Cloning repository..."
//                 git branch: 'main', url: 'https://github.com/your-org/transformeMS.git'
//             }
//         }
//
//         stage('Install Dependencies') {
//             steps {
//                 echo "Installing dependencies using Ansible..."
//                 sh 'ansible-playbook infra/setup.yml -i infra/hosts'
//             }
//         }
//
//         stage('Build Docker Image') {
//             steps {
//                 echo "Building Docker image..."
//                 sh 'docker build -t $DOCKER_IMAGE .'
//             }
//         }
//
//         stage('Push Docker Image') {
//             steps {
//                 echo "Pushing Docker image to registry..."
//                 withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials-id', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
//                     sh '''
//                         echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
//                         docker push $DOCKER_IMAGE
//                     '''
//                 }
//             }
//         }
//
// //         stage('Deploy to Kubernetes') {
// //             steps {
// //                 echo "Deploying to Kubernetes cluster..."
// //                 withCredentials([file(credentialsId: 'kubeconfig-credentials-id', variable: 'KUBECONFIG')]) {
// //                     sh '''
// //                         export KUBECONFIG=$KUBECONFIG
// //                         kubectl apply -f k8s/k8s-deployment.yaml
// //                     '''
// //                 }
// //             }
// //         }
// //     }
//
//     post {
//         success {
//             echo "✅ Pipeline executed successfully."
//         }
//         failure {
//             echo "❌ Pipeline failed!"
//         }
//     }
// }
pipeline {
  agent any
  stages {
    stage('Build DVC Pipeline') {
      steps {
        echo 'Building DVC Pipeline...'
//         sh 'cd TransformerMS'
        sh 'dvc repro --cwd TransformerMS'
        sh 'dvc metrics show'
      }
    }
    stage('Build TransformerMS') {
      steps {
        echo 'Building TransformerMS...'
        sh 'docker build -t transformer-ms ./TransformerMS'
      }
    }
    stage('Push To DockerHub'){
        steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhubcreds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh 'docker tag transformer-ms prakharpatil/transformer-ms'
                    sh 'docker push prakharpatil/transformer-ms'
                }
            }
    }
  }


    post {
        success {
            echo "✅ Pipeline executed successfully."
        }
        failure {
            echo "❌ Pipeline failed!"
        }
    }
}



